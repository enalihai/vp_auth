---
http_interactions:
- request:
    method: get
    uri: https://api.themoviedb.org/3/search/movie?api_key=9f760f22dada1c838520c8632f7aad9a&query=Fight
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - Faraday v2.3.0
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Sat, 09 Jul 2022 01:13:15 GMT
      Content-Type:
      - application/json; charset=utf-8
      Transfer-Encoding:
      - chunked
      Connection:
      - keep-alive
      Vary:
      - Accept-Encoding
      Server:
      - BunnyCDN-TX-881
      Cdn-Pullzone:
      - '775334'
      Cdn-Uid:
      - 29af4e0e-bcbd-4fcb-8635-74ddc38a1ebf
      Cdn-Requestcountrycode:
      - US
      Access-Control-Allow-Methods:
      - GET, HEAD, POST, PUT, DELETE, OPTIONS
      Access-Control-Allow-Origin:
      - "*"
      Access-Control-Expose-Headers:
      - ETag, X-RateLimit-Limit, X-RateLimit-Remaining, X-RateLimit-Reset, Retry-After,
        Content-Length, Content-Range
      Cache-Control:
      - public, max-age=600
      Cdn-Proxyver:
      - '1.02'
      Cdn-Requestpullsuccess:
      - 'True'
      Cdn-Requestpullcode:
      - '200'
      Cdn-Cachedat:
      - 07/09/2022 01:13:15
      Cdn-Edgestorageid:
      - '881'
      Cdn-Status:
      - '200'
      Cdn-Requestid:
      - 984b51dcb0872ceca781f0786ce9e7c2
      Cdn-Cache:
      - MISS
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        eyJwYWdlIjoxLCJyZXN1bHRzIjpbeyJhZHVsdCI6ZmFsc2UsImJhY2tkcm9wX3BhdGgiOiIvcnI3RTBOb0dLeHZia2I4OWVSMUd3Zm9ZanBBLmpwZyIsImdlbnJlX2lkcyI6WzE4XSwiaWQiOjU1MCwib3JpZ2luYWxfbGFuZ3VhZ2UiOiJlbiIsIm9yaWdpbmFsX3RpdGxlIjoiRmlnaHQgQ2x1YiIsIm92ZXJ2aWV3IjoiQSB0aWNraW5nLXRpbWUtYm9tYiBpbnNvbW5pYWMgYW5kIGEgc2xpcHBlcnkgc29hcCBzYWxlc21hbiBjaGFubmVsIHByaW1hbCBtYWxlIGFnZ3Jlc3Npb24gaW50byBhIHNob2NraW5nIG5ldyBmb3JtIG9mIHRoZXJhcHkuIFRoZWlyIGNvbmNlcHQgY2F0Y2hlcyBvbiwgd2l0aCB1bmRlcmdyb3VuZCBcImZpZ2h0IGNsdWJzXCIgZm9ybWluZyBpbiBldmVyeSB0b3duLCB1bnRpbCBhbiBlY2NlbnRyaWMgZ2V0cyBpbiB0aGUgd2F5IGFuZCBpZ25pdGVzIGFuIG91dC1vZi1jb250cm9sIHNwaXJhbCB0b3dhcmQgb2JsaXZpb24uIiwicG9wdWxhcml0eSI6NTguNTE2LCJwb3N0ZXJfcGF0aCI6Ii9wQjhCTTdwZFNwNkI2SWg3UVo0RHJRM1BtSksuanBnIiwicmVsZWFzZV9kYXRlIjoiMTk5OS0xMC0xNSIsInRpdGxlIjoiRmlnaHQgQ2x1YiIsInZpZGVvIjpmYWxzZSwidm90ZV9hdmVyYWdlIjo4LjQsInZvdGVfY291bnQiOjI0MzQ4fSx7ImFkdWx0IjpmYWxzZSwiYmFja2Ryb3BfcGF0aCI6Ii9rSVdXdWxremMza0VMSEp4ODRsM0pOZVptenouanBnIiwiZ2VucmVfaWRzIjpbMzVdLCJpZCI6MzQ1OTIyLCJvcmlnaW5hbF9sYW5ndWFnZSI6ImVuIiwib3JpZ2luYWxfdGl0bGUiOiJGaXN0IEZpZ2h0Iiwib3ZlcnZpZXciOiJXaGVuIG9uZSBzY2hvb2wgdGVhY2hlciBnZXRzIHRoZSBvdGhlciBmaXJlZCwgaGUgaXMgY2hhbGxlbmdlZCB0byBhbiBhZnRlci1zY2hvb2wgZmlnaHQuIiwicG9wdWxhcml0eSI6MTkuNzkzLCJwb3N0ZXJfcGF0aCI6Ii9odVJodjRJWkRrMmRzMERJRGtJNnV4ZG1iNkouanBnIiwicmVsZWFzZV9kYXRlIjoiMjAxNy0wMi0xNiIsInRpdGxlIjoiRmlzdCBGaWdodCIsInZpZGVvIjpmYWxzZSwidm90ZV9hdmVyYWdlIjo2LjEsInZvdGVfY291bnQiOjEwNjl9LHsiYWR1bHQiOmZhbHNlLCJiYWNrZHJvcF9wYXRoIjoiL2lIdGhQZTcySmZiM2R1Mk1lUWNRc0VUVUJzSS5qcGciLCJnZW5yZV9pZHMiOlsyOCw4MCw1M10sImlkIjo2MjkwMTcsIm9yaWdpbmFsX2xhbmd1YWdlIjoiZW4iLCJvcmlnaW5hbF90aXRsZSI6IlJ1biBIaWRlIEZpZ2h0Iiwib3ZlcnZpZXciOiJBIDE3LXllYXItb2xkIGdpcmwgdXNlcyBoZXIgd2l0cywgc3Vydml2YWwgc2tpbGxzLCBhbmQgY29tcGFzc2lvbiB0byBmaWdodCBmb3IgaGVyIGxpZmUsIGFuZCB0aG9zZSBvZiBoZXIgZmVsbG93IGNsYXNzbWF0ZXMsIGFnYWluc3QgYSBncm91cCBvZiBsaXZlLXN0cmVhbWluZyBzY2hvb2wgc2hvb3RlcnMuIiwicG9wdWxhcml0eSI6MjMuODE5LCJwb3N0ZXJfcGF0aCI6Ii93bFAyNUgxNE92S29GT1JJd3VLb21aemlvQTUuanBnIiwicmVsZWFzZV9kYXRlIjoiMjAyMC0wOS0xMCIsInRpdGxlIjoiUnVuIEhpZGUgRmlnaHQiLCJ2aWRlbyI6ZmFsc2UsInZvdGVfYXZlcmFnZSI6Ni43LCJ2b3RlX2NvdW50IjoyNTl9LHsiYWR1bHQiOmZhbHNlLCJiYWNrZHJvcF9wYXRoIjoiL2laNndZdFBHTzZIZzR5UDdPMVpYcElUY3g3Vi5qcGciLCJnZW5yZV9pZHMiOlsyOCwzNV0sImlkIjo2ODIzNzcsIm9yaWdpbmFsX2xhbmd1YWdlIjoiZW4iLCJvcmlnaW5hbF90aXRsZSI6IkNoaWNrIEZpZ2h0Iiwib3ZlcnZpZXciOiJXaGVuIEFubmEgV3luY29tYiBpcyBpbnRyb2R1Y2VkIHRvIGFuIHVuZGVyZ3JvdW5kLCBhbGwtZmVtYWxlIGZpZ2h0IGNsdWIgaW4gb3JkZXIgdG8gdHVybiB0aGUgbWVzcyBvZiBoZXIgbGlmZSBhcm91bmQsIHNoZSBkaXNjb3ZlcnMgc2hlIGlzIG11Y2ggbW9yZSBwZXJzb25hbGx5IGNvbm5lY3RlZCB0byB0aGUgaGlzdG9yeSBvZiB0aGUgY2x1YiB0aGFuIHNoZSBjb3VsZCBldmVyIGltYWdpbmUuIiwicG9wdWxhcml0eSI6MTEuMjk4LCJwb3N0ZXJfcGF0aCI6Ii80Wm9jZHhuT082cTJVYmRLeWUyd2dvZkxGaEIuanBnIiwicmVsZWFzZV9kYXRlIjoiMjAyMC0xMS0xMyIsInRpdGxlIjoiQ2hpY2sgRmlnaHQiLCJ2aWRlbyI6ZmFsc2UsInZvdGVfYXZlcmFnZSI6NS45LCJ2b3RlX2NvdW50IjoxODB9LHsiYWR1bHQiOmZhbHNlLCJiYWNrZHJvcF9wYXRoIjoiL3F6aUtoTXlyVnFqNTY3amxiajU1R3BCZEtmOS5qcGciLCJnZW5yZV9pZHMiOlsyOF0sImlkIjo0NDA3NzcsIm9yaWdpbmFsX2xhbmd1YWdlIjoiZW4iLCJvcmlnaW5hbF90aXRsZSI6IkZlbWFsZSBGaWdodCBTcXVhZCIsIm92ZXJ2aWV3IjoiQSBmb3JtZXIgZmlnaHRlciByZWx1Y3RhbnRseSByZXR1cm5zIHRvIHRoZSBsaWZlIHNoZSBhYmFuZG9uZWQgaW4gb3JkZXIgdG8gaGVscCBoZXIgc2lzdGVyIHN1cnZpdmUgdGhlIHNhZGlzdGljIHdvcmxkIG9mIGlsbGVnYWwgZmlnaHRpbmcgYW5kIHRoZSBtYW5pYWMgd2hvIHJ1bnMgaXQuIiwicG9wdWxhcml0eSI6MTEuMDE2LCJwb3N0ZXJfcGF0aCI6Ii9pSTljOFhOZFB1d0I0UlliSE1kNjJRTmhvUksuanBnIiwicmVsZWFzZV9kYXRlIjoiMjAxNy0wMy0xNiIsInRpdGxlIjoiRmVtYWxlIEZpZ2h0IFNxdWFkIiwidmlkZW8iOmZhbHNlLCJ2b3RlX2F2ZXJhZ2UiOjYuNSwidm90ZV9jb3VudCI6Njh9LHsiYWR1bHQiOmZhbHNlLCJiYWNrZHJvcF9wYXRoIjoiL2V0ZHlWTnpuSDhYbGliNWQwMGVaM0pwTkVTMS5qcGciLCJnZW5yZV9pZHMiOlsyOF0sImlkIjo2MjMyOCwib3JpZ2luYWxfbGFuZ3VhZ2UiOiJlbiIsIm9yaWdpbmFsX3RpdGxlIjoiU2hvb3RmaWdodGVyOiBGaWdodCB0byB0aGUgRGVhdGgiLCJvdmVydmlldyI6Ik5pY2sgYW5kIFJ1YmVuIGFyZSBob29kd2lua2VkIGludG8gYSBcInNob290ZmlnaHRlclwiIChuby1ob2xkcy1iYXJyZWQsIHRvIHRoZSBkZWF0aCkgbWFydGlhbCBhcnRzIG1hdGNoIGJ5IHRoZSBldmlsIE1yLiBMZWUsIHdobyBoYXMgYSBncnVkZ2UgYWdhaW5zdCB3b3JsZCBzaG9vdGZpZ2h0ZXIgY2hhbXAoYW5kIHRlYWNoZXIgb2YgTmljayBhbmQgUnViZW4pIFNoaW5nby4iLCJwb3B1bGFyaXR5Ijo5LjksInBvc3Rlcl9wYXRoIjoiLzFXY3hWUUJzWEc2RVFsTkpkOHZjRjRvRlRnNC5qcGciLCJyZWxlYXNlX2RhdGUiOiIxOTkzLTA1LTA1IiwidGl0bGUiOiJTaG9vdGZpZ2h0ZXI6IEZpZ2h0IHRvIHRoZSBEZWF0aCIsInZpZGVvIjpmYWxzZSwidm90ZV9hdmVyYWdlIjo2LjQsInZvdGVfY291bnQiOjM2fSx7ImFkdWx0IjpmYWxzZSwiYmFja2Ryb3BfcGF0aCI6Ii9mRXRnenBtR2hjOVhablhVMXRhdFhXVkpLWnMuanBnIiwiZ2VucmVfaWRzIjpbMTgsMTA3NzBdLCJpZCI6MTA4MjUxLCJvcmlnaW5hbF9sYW5ndWFnZSI6ImVuIiwib3JpZ2luYWxfdGl0bGUiOiJHaXJsIEZpZ2h0Iiwib3ZlcnZpZXciOiJJbnNwaXJlZCBieSBhIHRydWUgc3RvcnksIEdpcmwgRmlnaHQgcmVjb3VudHMgdGhlIGhhcnJvd2luZyBzdG9yeSBvZiBhIDE2LXllYXItb2xkLCBzdGVsbGFyIGhpZ2ggc2Nob29sIHN0dWRlbnQgd2hvc2UgbGlmZSBzcGlyYWxzIGRvd253YXJkIHdoZW4gaGVyIGZvcm1lciBmcmllbmRzIGNvbnNwaXJlIHRvIHVwbG9hZCBvbnRvIHRoZSBJbnRlcm5ldCBhIHNob2NraW5nIHZpZGVvIG9mIHRoZW0gYmVhdGluZyBoZXIgdXAuIiwicG9wdWxhcml0eSI6NC42NDMsInBvc3Rlcl9wYXRoIjoiL21pZTJ1VldXSTJpTmxrU2RIYU9qazFKM2lyVy5qcGciLCJyZWxlYXNlX2RhdGUiOiIyMDExLTEwLTAzIiwidGl0bGUiOiJHaXJsIEZpZ2h0IiwidmlkZW8iOmZhbHNlLCJ2b3RlX2F2ZXJhZ2UiOjYuMiwidm90ZV9jb3VudCI6MzN9LHsiYWR1bHQiOmZhbHNlLCJiYWNrZHJvcF9wYXRoIjoiL3hkMnNpZFFNdjZKT0NlOGZBczBvRWdmeTZiVC5qcGciLCJnZW5yZV9pZHMiOlsxNiwxMDc1Ml0sImlkIjo1NTQ2MSwib3JpZ2luYWxfbGFuZ3VhZ2UiOiJlbiIsIm9yaWdpbmFsX3RpdGxlIjoiRG9uYWxkJ3MgU25vdyBGaWdodCIsIm92ZXJ2aWV3IjoiSXQncyBzbm93ZWQsIGFuZCBEb25hbGQgRHVjayBpcyBnb2luZyBzbGVkZGluZy4gTWVhbndoaWxlLCBoaXMgbmVwaGV3cyBoYXZlIGJ1aWx0IGEgc25vd21hbiBhdCB0aGUgYm90dG9tIG9mIHRoZSBoaWxsLiBEb25hbGQgYWltcyBoaXMgc2xlZCBhdCB0aGVpciBzbm93bWFuIGFuZCBkZW1vbGlzaGVzIGl0LCBzbyB0aGUgYm95cyBnZXQgZXZlbiBieSBpbmNsdWRpbmcgYSBib3VsZGVyIGluIHRoZSBib3R0b20gb2YgdGhlaXIgbmV4dCBzbm93bWFuLiBUaGlzIG1lYW5zIHdhciwgc28gdGhleSByZXRyZWF0IHRvIG9wcG9zaW5nIHNub3cgZm9ydHMgZm9yIGJhdHRsZS4iLCJwb3B1bGFyaXR5Ijo0LjAyOSwicG9zdGVyX3BhdGgiOiIvcjVUVXM3NlBiTzY4YjZxbUhnV2p3NE5zejM5LmpwZyIsInJlbGVhc2VfZGF0ZSI6IjE5NDItMDQtMTAiLCJ0aXRsZSI6IkRvbmFsZCdzIFNub3cgRmlnaHQiLCJ2aWRlbyI6ZmFsc2UsInZvdGVfYXZlcmFnZSI6Ny4xLCJ2b3RlX2NvdW50Ijo1Nn0seyJhZHVsdCI6ZmFsc2UsImJhY2tkcm9wX3BhdGgiOiIvZ2F3aEt4NmlXQVhDTk8wTUVVQzJDd2s3dUhpLmpwZyIsImdlbnJlX2lkcyI6WzI4LDg3OCwxMiwxNF0sImlkIjo5NzgyMzAsIm9yaWdpbmFsX2xhbmd1YWdlIjoiZW4iLCJvcmlnaW5hbF90aXRsZSI6IlVsdHJhIEdhbGF4eSBGaWdodDogVGhlIERlc3RpbmVkIENyb3Nzcm9hZCIsIm92ZXJ2aWV3IjoiVWx0cmEgR2FsYXh5IEZpZ2h0OiBUaGUgRGVzdGluZWQgQ3Jvc3Nyb2FkIGlzIHRoZSB0aGlyZCBpbnN0YWxsbWVudCBvZiB0aGUgVWx0cmEgR2FsYXh5IEZpZ2h0IHNlcmllcywgY29udGludWVkIGZyb20gdGhlIHByZXZpb3VzIHNlcmllcyBVbHRyYSBHYWxheHkgRmlnaHQ6IFRoZSBBYnNvbHV0ZSBDb25zcGlyYWN5IHdoaWNoIGhhZCBhIHNob2NraW5nIGVuZGluZy4gIFVsdHJhIEhlcm9lcyB2cyBBYnNvbHV0aWFuLCB0aGUgZGVzdGluZWQgYmF0dGxlIGlzIGFib3V0IHRvIHJlc2hhcGUgdGhlIGdhbGF4eSEiLCJwb3B1bGFyaXR5Ijo5LjQyNiwicG9zdGVyX3BhdGgiOiIvc3NxMzg5bjNRa2ZsWWFyMTVIOVBJeHIxaWphLmpwZyIsInJlbGVhc2VfZGF0ZSI6IjIwMjItMDUtMjYiLCJ0aXRsZSI6IlVsdHJhIEdhbGF4eSBGaWdodDogVGhlIERlc3RpbmVkIENyb3Nzcm9hZCIsInZpZGVvIjpmYWxzZSwidm90ZV9hdmVyYWdlIjowLCJ2b3RlX2NvdW50IjowfSx7ImFkdWx0IjpmYWxzZSwiYmFja2Ryb3BfcGF0aCI6Ii81ZVIweUxOVnlhbHZ6TGRodU84bVdkZDNFQ2suanBnIiwiZ2VucmVfaWRzIjpbOTksMzZdLCJpZCI6MTQyODYsIm9yaWdpbmFsX2xhbmd1YWdlIjoiZW4iLCJvcmlnaW5hbF90aXRsZSI6IldoeSBXZSBGaWdodCIsIm92ZXJ2aWV3IjoiSXMgQW1lcmljYW4gZm9yZWlnbiBwb2xpY3kgZG9taW5hdGVkIGJ5IHRoZSBpZGVhIG9mIG1pbGl0YXJ5IHN1cHJlbWFjeT8gSGFzIHRoZSBtaWxpdGFyeSBiZWNvbWUgdG9vIGltcG9ydGFudCBpbiBBbWVyaWNhbiBsaWZlPyBKYXJlY2tpJ3Mgc2hyZXdkIGFuZCBpbnRlbGxpZ2VudCBwb2xlbWljIHdvdWxkIHNlZW0gdG8gZ2l2ZSBhbiBhZmZpcm1hdGl2ZSBhbnN3ZXIgdG8gZWFjaCBvZiB0aGVzZSBxdWVzdGlvbnMuIiwicG9wdWxhcml0eSI6NS45MzMsInBvc3Rlcl9wYXRoIjoiL2tmT21ubHd0MXJyaHhteGMwNVgzaTltSFNPcy5qcGciLCJyZWxlYXNlX2RhdGUiOiIyMDA1LTAxLTAxIiwidGl0bGUiOiJXaHkgV2UgRmlnaHQiLCJ2aWRlbyI6ZmFsc2UsInZvdGVfYXZlcmFnZSI6Ny42LCJ2b3RlX2NvdW50Ijo5NX0seyJhZHVsdCI6ZmFsc2UsImJhY2tkcm9wX3BhdGgiOiIvdFVGTGF2RU05eVBCbHlrbElicmZFMlRKbFh4LmpwZyIsImdlbnJlX2lkcyI6WzE4XSwiaWQiOjE5NjM1NSwib3JpZ2luYWxfbGFuZ3VhZ2UiOiJlbiIsIm9yaWdpbmFsX3RpdGxlIjoiTXVoYW1tYWQgQWxpJ3MgR3JlYXRlc3QgRmlnaHQiLCJvdmVydmlldyI6Ik11aGFtbWFkIEFsaeKAmXMgaGlzdG9yaWMgU3VwcmVtZSBDb3VydCBiYXR0bGUgZnJvbSBiZWhpbmQgY2xvc2VkIGRvb3JzLiBXaGVuIEFsaSB3YXMgZHJhZnRlZCBpbnRvIHRoZSBWaWV0bmFtIFdhciBhdCB0aGUgaGVpZ2h0IG9mIGhpcyBib3hpbmcgY2FyZWVyLCBoaXMgY2xhaW0gdG8gY29uc2NpZW50aW91cyBvYmplY3RvciBzdGF0dXMgbGVkIHRvIGEgY29udHJvdmVyc2lhbCBsZWdhbCBiYXR0bGUgdGhhdCByYXR0bGVkIHRoZSBVLlMuIGp1ZGljaWFsIHN5c3RlbSByaWdodCB1cCB0byB0aGUgaGlnaGVzdCBjb3VydCBpbiB0aGUgbGFuZC4iLCJwb3B1bGFyaXR5Ijo2LjA5NSwicG9zdGVyX3BhdGgiOiIvemJBV1E0MU5QYVdiTjBkZXlNdXhGMXVzdG1qLmpwZyIsInJlbGVhc2VfZGF0ZSI6IjIwMTMtMTAtMDQiLCJ0aXRsZSI6Ik11aGFtbWFkIEFsaSdzIEdyZWF0ZXN0IEZpZ2h0IiwidmlkZW8iOmZhbHNlLCJ2b3RlX2F2ZXJhZ2UiOjYuNiwidm90ZV9jb3VudCI6MzB9LHsiYWR1bHQiOmZhbHNlLCJiYWNrZHJvcF9wYXRoIjoiL25pT3IwMVNueWZIQVlQdENBZjBLM2Q4RHJBZy5qcGciLCJnZW5yZV9pZHMiOlsxMDQwMiwzNV0sImlkIjo2MjkzNCwib3JpZ2luYWxfbGFuZ3VhZ2UiOiJlbiIsIm9yaWdpbmFsX3RpdGxlIjoiRmlnaHQgZm9yIFlvdXIgUmlnaHQgUmV2aXNpdGVkIiwib3ZlcnZpZXciOiJGaWdodCBmb3IgWW91ciBSaWdodCBSZXZpc2l0ZWQgc3RhcnMgRGFubnkgTWNCcmlkZSwgU2V0aCBSb2dlbiwgYW5kIEVsaWphaCBXb29kIGFzIHRoZSBcInlvdW5nXCIgQmVhc3RpZSBCb3lzIGZyb20gdGhlIHBhc3QgYW5kIEphY2sgQmxhY2ssIEpvaG4gQy4gUmVpbGx5LCBhbmQgV2lsbCBGZXJyZWxsIGFzIHRoZSBcIm9sZFwiIEJlYXN0aWUgQm95cyBmcm9tIHRoZSBmdXR1cmUuIFRoZSBzdG9yeSBiZWdpbnMgd2hlcmUgdGhlIHZpZGVvIGZvciBcIkZpZ2h0IGZvciBZb3VyIFJpZ2h0ICgxOTg3KVwiIGVuZGVkLiBJdCBmZWF0dXJlcyBtdXNpYyBmcm9tIHRoZSBiYW5kJ3MgYWxidW0gSG90IFNhdWNlIENvbW1pdHRlZSBQYXJ0IFR3by4iLCJwb3B1bGFyaXR5Ijo2LjM2MiwicG9zdGVyX3BhdGgiOiIvdHhiV2tCdERjNWZYcU9hVWREZ3R5NG91emZKLmpwZyIsInJlbGVhc2VfZGF0ZSI6IjIwMTEtMDQtMjIiLCJ0aXRsZSI6IkZpZ2h0IGZvciBZb3VyIFJpZ2h0IFJldmlzaXRlZCIsInZpZGVvIjpmYWxzZSwidm90ZV9hdmVyYWdlIjo2LjUsInZvdGVfY291bnQiOjYyfSx7ImFkdWx0IjpmYWxzZSwiYmFja2Ryb3BfcGF0aCI6Ii95UmJEdzZMeThNU1FORGZMUU5mZkhadVBacFMuanBnIiwiZ2VucmVfaWRzIjpbMTYsMTRdLCJpZCI6MzcyNjMxLCJvcmlnaW5hbF9sYW5ndWFnZSI6ImVuIiwib3JpZ2luYWxfdGl0bGUiOiJNYXJ2ZWwgU3VwZXIgSGVybyBBZHZlbnR1cmVzOiBGcm9zdCBGaWdodCEiLCJvdmVydmlldyI6IlRoZSBob2xpZGF5IHNlYXNvbiBnZXRzIGV4dHJhIGNoaWxseSBhcyBMb2tpIGFuZCB0aGUgZnJvc3QgZ2lhbnQgWW1pciBwbG90IHRvIGNvbnF1ZXIgdGhlIHdvcmxkLiBNYXJ2ZWwgaGVyb2VzIElyb24gTWFuLCBDYXB0YWluIEFtZXJpY2EsIEh1bGssIFRob3IgYW5kIG90aGVycyBtdXN0IHN0b3AgdGhlIHZpbGxhaW5zIGZyb20gc3RlYWxpbmcgU2FudGEncyBwb3dlciDigJMgaWYgYW55b25lIGNhbiBhY3R1YWxseSBmaW5kIHRoZSBteXN0ZXJpb3VzIE1yLiBDbGF1cy4gRm9ydHVuYXRlbHksIFJvY2tldCBSYWNjb29uIGFuZCBHcm9vdCBhcmUgYWxzbyBob3Qgb24gU2FudGEncyB0cmFpbC4gSGVyb2VzLCB2aWxsYWlucywgZWx2ZXMgYW5kIGNvc21pYyBib3VudHkgaHVudGVycyBjb2xsaWRlIGluIGFuIGVwaWMgcXVlc3QgdGhhdCBsZWF2ZXMgdGhlIGZhdGUgb2YgdGhlIGhvbGlkYXkgYW5kIHRoZSB3b3JsZCBpbiB0aGUgYmFsYW5jZS4iLCJwb3B1bGFyaXR5Ijo4Ljk5MiwicG9zdGVyX3BhdGgiOiIvMlN0TThWYXZmN3VrdnVqOW14ZzFvN25LeG1pLmpwZyIsInJlbGVhc2VfZGF0ZSI6IjIwMTUtMTItMTUiLCJ0aXRsZSI6Ik1hcnZlbCBTdXBlciBIZXJvIEFkdmVudHVyZXM6IEZyb3N0IEZpZ2h0ISIsInZpZGVvIjp0cnVlLCJ2b3RlX2F2ZXJhZ2UiOjUuOSwidm90ZV9jb3VudCI6Mzh9LHsiYWR1bHQiOmZhbHNlLCJiYWNrZHJvcF9wYXRoIjoiL2hacFJScmExZzVRWTB0RTR5Z3BnMG9aUW5KSC5qcGciLCJnZW5yZV9pZHMiOls1MywyOF0sImlkIjoxNDg1MjYsIm9yaWdpbmFsX2xhbmd1YWdlIjoiZW4iLCJvcmlnaW5hbF90aXRsZSI6IkZvcmNlZCBUbyBGaWdodCIsIm92ZXJ2aWV3IjoiT25jZSBhIGxlZ2VuZCBpbiB0aGUgYnJ1dGFsIHdvcmxkIG9mIGlsbGljaXQgdW5kZXJncm91bmQgZmlnaHRpbmcsIFNoYW5lIFNsYXZpbiAoRGFuaWVscykgZGVjaWRlcyB0byB0dXJuIGhpcyBsaWZlIGFyb3VuZCwgcHJvbWlzaW5nIGhpcyB3aWZlIGFuZCB5b3VuZyBzb24gaGUncyBmb3VnaHQgaGlzIGxhc3QgYmF0dGxlLiBCdXQgd2hlbiBoaXMgeW91bmdlciBicm90aGVyIGJldHJheXMgYSBydXRobGVzcyBjcmltZSBib3NzIChXZWxsZXIpLCBTaGFuZSBpcyBmb3JjZWQgYmFjayBpbnRvIHRoZSBhcmVuYSB0byBwYXkgaGlzIGJyb3RoZXIncyBkZWJ0cyBhbmQgdG8gcHJvdGVjdCBoaXMgZmFtaWx5LiIsInBvcHVsYXJpdHkiOjUuMTc3LCJwb3N0ZXJfcGF0aCI6Ii9xRmZkM3hjWnBRREo3Zk1sVjhjeVhxbVRlSmQuanBnIiwicmVsZWFzZV9kYXRlIjoiMjAxMS0wOC0zMSIsInRpdGxlIjoiRm9yY2VkIFRvIEZpZ2h0IiwidmlkZW8iOmZhbHNlLCJ2b3RlX2F2ZXJhZ2UiOjQuNywidm90ZV9jb3VudCI6MTZ9LHsiYWR1bHQiOmZhbHNlLCJiYWNrZHJvcF9wYXRoIjoiL29vWGZiRGo0dkhSRzhzWG1rNlU4dTJON1ZWOC5qcGciLCJnZW5yZV9pZHMiOlsyOCwxOF0sImlkIjozODUzODMsIm9yaWdpbmFsX2xhbmd1YWdlIjoiZW4iLCJvcmlnaW5hbF90aXRsZSI6IkZpZ2h0IFZhbGxleSIsIm92ZXJ2aWV3IjoiVHdlbnR5LXR3byB5ZWFyIG9sZCBUb3JpIENvcm8gZ2V0cyBpbnZvbHZlZCBpbiBhbiB1bmRlcmdyb3VuZCBmaWdodGluZyByaW5nIGluIGEgcm91Z2ggc2VjdGlvbiBvZiBDYW1kZW4sIE5KLiBXaGVuIGhlciBicnVpc2VkIGFuZCBiZWF0ZW4gYm9keSBpcyBmb3VuZCBhYmFuZG9uZWQgaW4gdGhlIHdvb2RzLCBydW1vcnMgYmVnaW4gdG8gc3dpcmwgdGhhdCBUb3JpIGRpZWQgaW4gRmlnaHQgVmFsbGV5LCBhbiB1bm9mZmljaWFsIG5laWdoYm9yaG9vZCB3aGVyZSBmaWdodGVycyBnbyB0byBtYWtlIG1vbmV5LiBUb3JpJ3Mgc2lzdGVyIFdpbmRzb3IgbW92ZXMgdG8gdG93biB0byBzdGFydCBoZXIgb3duIGludmVzdGlnYXRpb24uIEphYidzLCBhIHJlc3BlY3RlZCBmaWdodGVyIHR1cm5lZCBneW0gb3duZXIsIGFncmVlcyB0byB0cmFpbiBXaW5kc29yIGFzIHNoZSBwcmVwYXJlcyB0byBjb21lIGZhY2UgdG8gZmFjZSB3aXRoIFRvcmkncyBraWxsZXIgYW5kIGZpZ2h0IGZvciBqdXN0aWNlLiIsInBvcHVsYXJpdHkiOjMuOTY4LCJwb3N0ZXJfcGF0aCI6Ii9qSVBXa3pGOXNybFU4ZVpUbGRMTTZKWVp3a08uanBnIiwicmVsZWFzZV9kYXRlIjoiMjAxNi0wNy0yMiIsInRpdGxlIjoiRmlnaHQgVmFsbGV5IiwidmlkZW8iOmZhbHNlLCJ2b3RlX2F2ZXJhZ2UiOjMuNiwidm90ZV9jb3VudCI6MjJ9LHsiYWR1bHQiOmZhbHNlLCJiYWNrZHJvcF9wYXRoIjoiL25aZjN5M291WmY1MXNMdlR5UEpoM3ZDUG51TC5qcGciLCJnZW5yZV9pZHMiOlszNSwxOF0sImlkIjo0ODI5ODYsIm9yaWdpbmFsX2xhbmd1YWdlIjoiZW4iLCJvcmlnaW5hbF90aXRsZSI6IlRoZSBGaWdodCIsIm92ZXJ2aWV3IjoiVGluYSBsaXZlcyBpbiBhIHF1aWV0IHNlYXNpZGUgdG93biBidXQgaGVyIGxpZmUgaXMgYW55dGhpbmcgYnV0IHF1aWV0IC0gaGVyIG1vdGhlciBpcyB0aHJlYXRlbmluZyB0byBsZWF2ZSBoZXIgZmF0aGVyLCBoZXIgZGF1Z2h0ZXIgaXMgYmVpbmcgYnVsbGllZCBhbmQgc2hlIGFuZCBoZXIgaHVzYmFuZCBNaWNrIGFyZSBqdWdnbGluZyBmdWxsIHRpbWUgam9icyBhbmQgdGhyZWUgY2hpbGRyZW4uIERldGVybWluZWQgdG8gZGl0Y2ggdGhlIGR5c2Z1bmN0aW9uIGFuZCBiZWF0IGhlciBpbm5lciBkZW1vbnMsIFRpbmEgcHV0cyBvbiBoZXIgZmlnaHRpbmcgZ2xvdmVzIC0gbGl0ZXJhbGx5LCBzdGVwcGluZyBpbnRvIHRoZSBib3hpbmcgcmluZyB0byBzd2VhdCBvdXQgaGVyIGFueGlldGllcyBhbmQgcHVuY2ggdXAgaGVyIHNlbGYtd29ydGguIEJ1dCBkb2VzIHNoZSBoYXZlIHdoYXQgaXQgdGFrZXMgdG8gZ2V0IGhlciBmYW1pbHkgb2ZmIHRoZSByb3BlcyBhbmQgZW1lcmdlIHZpY3RvcmlvdXM/IiwicG9wdWxhcml0eSI6My4xMzUsInBvc3Rlcl9wYXRoIjoiL2c2M2NCQXQ4VUJWdWRTZmF0d2w4TndUd1lUdS5qcGciLCJyZWxlYXNlX2RhdGUiOiIyMDE5LTAzLTE1IiwidGl0bGUiOiJUaGUgRmlnaHQiLCJ2aWRlbyI6ZmFsc2UsInZvdGVfYXZlcmFnZSI6Ni42LCJ2b3RlX2NvdW50IjoxMH0seyJhZHVsdCI6ZmFsc2UsImJhY2tkcm9wX3BhdGgiOm51bGwsImdlbnJlX2lkcyI6Wzk5XSwiaWQiOjMyNTM2NSwib3JpZ2luYWxfbGFuZ3VhZ2UiOiJlbiIsIm9yaWdpbmFsX3RpdGxlIjoiRGF3ZyBGaWdodCIsIm92ZXJ2aWV3IjoiSW4gYSBjcmltZS1wbGFndWVkIG5laWdoYm9yaG9vZCBuZWFyIE1pYW1pLCBicnV0YWwsIGJhcmUta251Y2tsZWQgYmFja3lhcmQgZmlnaHRzIGdpdmUgeW91bmcgbWVuIGEgY2hhbmNlIHRvIGVhcm4gbW9uZXkgLS0gYW5kIHNlbGYtcmVzcGVjdC4iLCJwb3B1bGFyaXR5IjozLjI5NiwicG9zdGVyX3BhdGgiOiIvdGhndmQwdGpETEp2VFZ4NEJhWmpmUUFDN3lLLmpwZyIsInJlbGVhc2VfZGF0ZSI6IjIwMTUtMDMtMTMiLCJ0aXRsZSI6IkRhd2cgRmlnaHQiLCJ2aWRlbyI6ZmFsc2UsInZvdGVfYXZlcmFnZSI6Ni41LCJ2b3RlX2NvdW50Ijo0M30seyJhZHVsdCI6ZmFsc2UsImJhY2tkcm9wX3BhdGgiOiIvbmhqV1VmNHdYc1daWTloS1IxRW9RT2hqdWVkLmpwZyIsImdlbnJlX2lkcyI6Wzk5XSwiaWQiOjM1NTAyMCwib3JpZ2luYWxfbGFuZ3VhZ2UiOiJ1ayIsIm9yaWdpbmFsX3RpdGxlIjoiV2ludGVyIG9uIEZpcmU6IFVrcmFpbmUncyBGaWdodCBmb3IgRnJlZWRvbSIsIm92ZXJ2aWV3IjoiQSBkb2N1bWVudGFyeSBvbiB0aGUgdW5yZXN0IGluIFVrcmFpbmUgZHVyaW5nIDIwMTMgYW5kIDIwMTQsIGFzIHN0dWRlbnQgZGVtb25zdHJhdGlvbnMgc3VwcG9ydGluZyBFdXJvcGVhbiBpbnRlZ3JhdGlvbiBncmV3IGludG8gYSB2aW9sZW50IHJldm9sdXRpb24gY2FsbGluZyBmb3IgdGhlIHJlc2lnbmF0aW9uIG9mIFByZXNpZGVudCBWaWt0b3IgRi4gWWFudWtvdmljaC4iLCJwb3B1bGFyaXR5Ijo5Ljg5MSwicG9zdGVyX3BhdGgiOiIva3R0U1prem9SMTNrTnRaVkxtaE5zbDlvT3RpLmpwZyIsInJlbGVhc2VfZGF0ZSI6IjIwMTUtMDktMDMiLCJ0aXRsZSI6IldpbnRlciBvbiBGaXJlOiBVa3JhaW5lJ3MgRmlnaHQgZm9yIEZyZWVkb20iLCJ2aWRlbyI6ZmFsc2UsInZvdGVfYXZlcmFnZSI6OCwidm90ZV9jb3VudCI6MjI1fSx7ImFkdWx0IjpmYWxzZSwiYmFja2Ryb3BfcGF0aCI6Ii9meUdzbUNtNm9wNmM5MFdWWXhoR3h6aU9wM1AuanBnIiwiZ2VucmVfaWRzIjpbMTA3NTJdLCJpZCI6NTU5NTc4LCJvcmlnaW5hbF9sYW5ndWFnZSI6ImVuIiwib3JpZ2luYWxfdGl0bGUiOiJBbG9uZSBXZSBGaWdodCIsIm92ZXJ2aWV3IjoiRmFjaW5nIG1vdW50aW5nIG9kZHMsIGEgc21hbGwgYnV0IGRldGVybWluZWQgYmFuZCBvZiBBbWVyaWNhbiBzb2xkaWVycyB2ZW50dXJlIGludG8gZGFuZ2Vyb3VzIGVuZW15IHRlcnJpdG9yeSBvbiBhIG1pc3Npb24gdG8gc3RvcCBhbiBhZHZhbmNpbmcgR2VybWFuIHVuaXQgZnJvbSBicmVha2luZyB0aHJvdWdoIHRoZSBBbGxpZWQgbGluZS4iLCJwb3B1bGFyaXR5IjozLjQ2NCwicG9zdGVyX3BhdGgiOiIveTBRWEQ4elN4cEJzeVFTS045bWc1ZGlZZXhWLmpwZyIsInJlbGVhc2VfZGF0ZSI6IjIwMTgtMTEtMDYiLCJ0aXRsZSI6IkFsb25lIFdlIEZpZ2h0IiwidmlkZW8iOmZhbHNlLCJ2b3RlX2F2ZXJhZ2UiOjQuNCwidm90ZV9jb3VudCI6MTB9LHsiYWR1bHQiOmZhbHNlLCJiYWNrZHJvcF9wYXRoIjoiL2x0MUxhbjlibUcyOUpqcWFNYWQ1dGtScENISi5qcGciLCJnZW5yZV9pZHMiOls5OV0sImlkIjo0NTk2Niwib3JpZ2luYWxfbGFuZ3VhZ2UiOiJlbiIsIm9yaWdpbmFsX3RpdGxlIjoiRGF5IG9mIHRoZSBGaWdodCIsIm92ZXJ2aWV3IjoiQW1lcmljYW4gc2hvcnQgc3ViamVjdCBkb2N1bWVudGFyeSBmaWxtIGluIGJsYWNrLWFuZC13aGl0ZSwgd2hpY2ggaXMgbm90YWJsZSBhcyB0aGUgZmlyc3QgcGljdHVyZSBkaXJlY3RlZCBieSBTdGFubGV5IEt1YnJpY2suIEt1YnJpY2sgZmluYW5jZWQgdGhlIGZpbG0gaGltc2VsZiwgYW5kIGl0IGlzIGJhc2VkIG9uIGFuIGVhcmxpZXIgcGhvdG8gZmVhdHVyZSBoZSBoYWQgZG9uZSBhcyBhIHBob3RvZ3JhcGhlciBmb3IgTG9vayBtYWdhemluZSBpbiAxOTQ5LiAnRGF5IG9mIHRoZSBGaWdodCcgc2hvd3MgSXJpc2gtQW1lcmljYW4gbWlkZGxld2VpZ2h0IGJveGVyIFdhbHRlciBDYXJ0aWVyIGR1cmluZyB0aGUgaGVpZ2h0IG9mIGhpcyBjYXJlZXIsIG9uIHRoZSBkYXkgb2YgYSBmaWdodCB3aXRoIGJsYWNrIG1pZGRsZXdlaWdodCBCb2JieSBKYW1lcywgd2hpY2ggdG9vayBwbGFjZSBvbiBBcHJpbCAxNywgMTk1MC4iLCJwb3B1bGFyaXR5Ijo0LjYxOSwicG9zdGVyX3BhdGgiOiIvNGNhWDNJWmtmN24yUUNieGFKTzNoeW4wU0NtLmpwZyIsInJlbGVhc2VfZGF0ZSI6IjE5NTEtMDQtMjYiLCJ0aXRsZSI6IkRheSBvZiB0aGUgRmlnaHQiLCJ2aWRlbyI6ZmFsc2UsInZvdGVfYXZlcmFnZSI6NS44LCJ2b3RlX2NvdW50IjoxMjB9XSwidG90YWxfcGFnZXMiOjEwOCwidG90YWxfcmVzdWx0cyI6MjE0Mn0=
  recorded_at: Sat, 09 Jul 2022 01:13:15 GMT
- request:
    method: get
    uri: https://api.themoviedb.org/3/search/movie?api_key=9f760f22dada1c838520c8632f7aad9a&page=2&query=Fight
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - Faraday v2.3.0
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Sat, 09 Jul 2022 01:13:16 GMT
      Content-Type:
      - application/json; charset=utf-8
      Transfer-Encoding:
      - chunked
      Connection:
      - keep-alive
      Vary:
      - Accept-Encoding
      Server:
      - BunnyCDN-TX-881
      Cdn-Pullzone:
      - '775334'
      Cdn-Uid:
      - 29af4e0e-bcbd-4fcb-8635-74ddc38a1ebf
      Cdn-Requestcountrycode:
      - US
      Access-Control-Allow-Methods:
      - GET, HEAD, POST, PUT, DELETE, OPTIONS
      Access-Control-Allow-Origin:
      - "*"
      Access-Control-Expose-Headers:
      - ETag, X-RateLimit-Limit, X-RateLimit-Remaining, X-RateLimit-Reset, Retry-After,
        Content-Length, Content-Range
      Cache-Control:
      - public, max-age=600
      Cdn-Proxyver:
      - '1.02'
      Cdn-Requestpullsuccess:
      - 'True'
      Cdn-Requestpullcode:
      - '200'
      Cdn-Cachedat:
      - 07/09/2022 01:13:16
      Cdn-Edgestorageid:
      - '881'
      Cdn-Status:
      - '200'
      Cdn-Requestid:
      - 1acbb2a86cbdde616ae5d5cfd85590a7
      Cdn-Cache:
      - MISS
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
  recorded_at: Sat, 09 Jul 2022 01:13:16 GMT
recorded_with: VCR 6.1.0
