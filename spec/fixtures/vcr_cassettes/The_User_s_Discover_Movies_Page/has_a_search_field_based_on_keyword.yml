---
http_interactions:
- request:
    method: get
    uri: https://api.themoviedb.org/3/search/movie?api_key=9f760f22dada1c838520c8632f7aad9a&query=Fight
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - Faraday v2.3.0
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Sat, 09 Jul 2022 01:28:30 GMT
      Content-Type:
      - application/json; charset=utf-8
      Transfer-Encoding:
      - chunked
      Connection:
      - keep-alive
      Vary:
      - Accept-Encoding
      Server:
      - BunnyCDN-TX-881
      Cdn-Pullzone:
      - '775334'
      Cdn-Uid:
      - 29af4e0e-bcbd-4fcb-8635-74ddc38a1ebf
      Cdn-Requestcountrycode:
      - US
      Access-Control-Allow-Methods:
      - GET, HEAD, POST, PUT, DELETE, OPTIONS
      Access-Control-Allow-Origin:
      - "*"
      Access-Control-Expose-Headers:
      - ETag, X-RateLimit-Limit, X-RateLimit-Remaining, X-RateLimit-Reset, Retry-After,
        Content-Length, Content-Range
      Cache-Control:
      - public, max-age=600
      Cdn-Proxyver:
      - '1.02'
      Cdn-Requestpullsuccess:
      - 'True'
      Cdn-Requestpullcode:
      - '200'
      Cdn-Cachedat:
      - 07/09/2022 01:28:30
      Cdn-Edgestorageid:
      - '881'
      Cdn-Status:
      - '200'
      Cdn-Requestid:
      - 007703c7467d3713f4550893f6fe33f4
      Cdn-Cache:
      - MISS
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
  recorded_at: Sat, 09 Jul 2022 01:28:30 GMT
- request:
    method: get
    uri: https://api.themoviedb.org/3/search/movie?api_key=9f760f22dada1c838520c8632f7aad9a&page=2&query=Fight
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - Faraday v2.3.0
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Sat, 09 Jul 2022 01:28:30 GMT
      Content-Type:
      - application/json; charset=utf-8
      Transfer-Encoding:
      - chunked
      Connection:
      - keep-alive
      Vary:
      - Accept-Encoding
      Server:
      - BunnyCDN-TX-881
      Cdn-Pullzone:
      - '775334'
      Cdn-Uid:
      - 29af4e0e-bcbd-4fcb-8635-74ddc38a1ebf
      Cdn-Requestcountrycode:
      - US
      Access-Control-Allow-Methods:
      - GET, HEAD, POST, PUT, DELETE, OPTIONS
      Access-Control-Allow-Origin:
      - "*"
      Access-Control-Expose-Headers:
      - ETag, X-RateLimit-Limit, X-RateLimit-Remaining, X-RateLimit-Reset, Retry-After,
        Content-Length, Content-Range
      Cache-Control:
      - public, max-age=600
      Cdn-Proxyver:
      - '1.02'
      Cdn-Requestpullsuccess:
      - 'True'
      Cdn-Requestpullcode:
      - '200'
      Cdn-Cachedat:
      - 07/09/2022 01:28:30
      Cdn-Edgestorageid:
      - '881'
      Cdn-Status:
      - '200'
      Cdn-Requestid:
      - 2619f692abd6b587e6384f99aa8fe37a
      Cdn-Cache:
      - MISS
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
  recorded_at: Sat, 09 Jul 2022 01:28:30 GMT
recorded_with: VCR 6.1.0
